version: "3"
services:
 
 
  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
      - ./nginx/:/etc/nginx/
    ports:
      - "${NGINX_PORT_1}:80"
      - "${NGINX_PORT_2}:443"
    depends_on:
      - node
    networks:
       - backend
       - frontend
      
  node:
    build:
      context: ./nodejs
    container_name: node
    restart: always
    environment:
      - WAIT_HOSTS=mongo:27017
      - ACKEE_MONGODB=${MONGODB_URI}
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/contests
  #  volumes:
   #    - ./nodejs/:/app/
    ports:
     - "${NODE_PORT}:3000"  # for test APP
    env_file:
     - .env
    depends_on:
     - mongo
     - postgres
    networks:
     - backend


  mongo:
    image: mongo
    container_name: mongo
    restart: always
    ports:
      - "${MONGODB_PORT}:27017"
 #   environment:
  #   - MONGO_INITDB_DATABASE=contests
    volumes:
      - mongo-volume:/data/db:rw,z
    networks:
      - backend

##Postgres
  postgres:
    image: postgres:11.2-alpine
    restart: always
    container_name: postgres
    volumes:
      - postgres-volume:/var/lib/postgresql/data:rw,z
    ports:
      - "${POSTGRES_PORT}:5432"
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    networks:
      - backend

networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge

volumes:
  postgres-volume:
    driver: local
  mongo-volume:
    driver: local
